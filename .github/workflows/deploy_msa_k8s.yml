# docker 빌드 후 ecr 업로드 및 kubectl apply
name: deploy ordersystem with k8s
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout github
        uses: actions/checkout@v2

      - name: install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.25.9"
      
      - name: configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET}}
          aws-region: ap-northeast-2

      - name: update cluster information
        run: aws eks update-kubeconfig --name 3team-cluster --region ap-northeast-2

      - name: login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: build and push docker member-images to ecr
        env:
          REGISTRY: 346903264902.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: suguri-member
        run: |
          docker build -t $REGISTRY/$REPOSITORY:latest -f ./msa/member/Dockerfile ./msa/member
          docker push $REGISTRY/$REPOSITORY:latest

      - name: eks kubectl apply
        run: |
          kubectl apply -f ./msa/member/k8s/ordersystem_member_depl.yml
          kubectl rollout restart deployment ordersystem-member-deployment -n suguri

      - name: build and push docker order-images to ecr
        env:
          REGISTRY: 346903264902.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: suguri-order
        run: |
          docker build -t $REGISTRY/$REPOSITORY:latest -f ./msa/ordering/Dockerfile ./msa/ordering
          docker push $REGISTRY/$REPOSITORY:latest

      - name: eks kubectl apply
        run: |
          kubectl apply -f ./msa/ordering/k8s/ordersystem_order_depl.yml
          kubectl rollout restart deployment ordersystem-order-deployment -n suguri

      - name: build and push docker product-images to ecr
        env:
          REGISTRY: 346903264902.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: suguri-product
        run: |
          docker build -t $REGISTRY/$REPOSITORY:latest -f ./msa/product/Dockerfile ./msa/product
          docker push $REGISTRY/$REPOSITORY:latest

      - name: eks kubectl apply
        run: |
          kubectl apply -f ./msa/product/k8s/ordersystem_product_depl.yml
          kubectl rollout restart deployment ordersystem-product-deployment -n suguri
